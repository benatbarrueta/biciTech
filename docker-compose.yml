services:
  frontend:
    build:
      context: ./web  # Carpeta del frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - proxy
    networks:
      - app_network

  microservicio_carriles:
    build:
      context: ./microservicioCarriles  # Carpeta de microservicioCarriles
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    networks:
      - app_network

  microservicio_meteo:
    build:
      context: ./microservicioMeteo  # Carpeta de microservicioMeteo
      dockerfile: Dockerfile
    ports:
      - "2000:2000"
    networks:
      - app_network

  microservicio_auth:
    build:
      context: ./microservicioAuth
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - mysql_db
    networks:
      - app_network

  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: bicitech
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3307:3306"
    volumes:
      - ./microservicioAuth/db:/docker-entrypoint-initdb.d
    networks:
      - app_network

  proxy:
    build:
      context: ./proxy  # El contexto está en la raíz del proyecto porque Gateway.js está ahí
      dockerfile: Dockerfile  # Dockerfile en la raíz
    ports:
      - "4000:80"
    depends_on:
      - microservicio_carriles
      - microservicio_meteo
      - microservicio_auth
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
